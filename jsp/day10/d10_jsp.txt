1.Mybatis
- 객체지향 언어인 자바의 관계형 데이터베이스 프로그래밍을 좀 더 쉽게 할 수 있게 도와주는 개발 프레임 워크로서 JDBC를 통해 데이터베이스에 엑세스 하는 작업을 캡슐화 하고 일반 sql 쿼리, 
  저장 프로시저 및 고급 매핑을 지원하며 모든 jdbc코드 및 매개 변수의 중복 작업을 제거한다.
- mybatis는 프로그램에 있는 sql 쿼리들을 한 구성 파일에 구성하여 프로그램 코드와 sql을 분리할 수 있는 장점을 가지고 있다
- mybatis는 기존 jdbc 방식과 달리 sql문을 xml파일에 작성함으로써 코드가 줄어들고 sql문만 따로 관리하기 때문에 수정이 편해진다.

2.Mybatis Query
-select
    성공: select문에 해당하는 결과를  return
    실패: error
-insert
    성공: 1(여러개인 경우도 1을 리턴해준다)
    실패: error
-update
    성공: update 된 행의 갯수를 반환
    실패: error
-delete
    성공: delete된 행의 개수 반환
    실패: error

3. EL문과 JSTL
 - jsp 페이지 내에 자바코드와 html코드가 섞여있으면 가독성이 떨어진다.
   EL 문과 JSTL문을 사용하면 html과 같은 태그로만 구성된 일관된 소스코드를 볼 수 있다는 장점이 있다.

3-1. EL
- expression language
- 값을 간결하고 간편하게 출력할 수 있도록 해주는 언어.
- <%= %> , out.println() 과 같은 자바코드를 더 이상 사용하지 않고 좀 더 간편하게 출력을 지원하기 위한 도구
- 배열이나 컬렉션에도 사용되고, javaBean 프로퍼티에서도 사용된다.
- ${....} 내에 표현한다.
- EL식에서 Attribute의 이름으로 해석이 된다
    -> 값을 찾을때는 Attribute는 작은 scope에서 큰 scope으로 찾는다
    page -> request -> session -> application

3-2. EL 연산자
- 산술연산자 : +,-,*,/(div),%(mode)
- 논리연산자 : &&(and), ||(or), !(not)
- 비교연산자 : ==(eq), !=(ne), <(lt), >(gt), <=(le), >=(ge)
- empty연산자 : 값이 null 이거나 공백문자인지를 판단하는 연산자
    ${empty ""}     -> true
    ${empty null}     -> true
    ${empty data}     -> data 값이 없으면 true