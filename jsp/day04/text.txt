1. 쿠키 vs 세션
 - 쿠키(Cookie)
    -> 저장위치 : 클라이언트 (접속자 PC)
    -> text 형식으로 저장
    -> 사용하는 자원(리소스) : 클라이언트 리소스
    -> 용량제한 : 하나의 쿠키 당 4KB
    -> 속도 : 세션보다는 빠름
    -> 보안 : 세션보다는 안좋다
 
 - 세션(Session)
    -> 저장위치 : 웹 서버
    -> Object 형식으로 저장
    -> 사용하는 자원(리소스) : 웹서버 리소스
    -> 용량제한 : 서버가 허용하는 항 용량제한 없음
    -> 속도 : 쿠키보다는 느리다
    -> 보안 : 쿠키보다는 좋다

2. Application , Session , Cookie
 
 2-1. Application
    -> 사용범위 : 전역 범위에서 사용하는 저장 공간
    -> 생명주기 : WAS가 시작해서 종료할 때 까지
    -> 저장위치 : WAS 서버
 
 2-2. Session
    -> 사용범위 : 세션 범위에서 사용하는 저장공간
    -> 생명주기 : 브라우저 종료, 세션 종료시간
    -> 저장위치 : WAS 서버
 
 2-3. Cookie
    -> 사용범위 : WEB 브라우저 별 지정한 PATH 범주 공간
    -> 생명주기 : 브라우저에 전달한 시간부터 만료 시간까지
    -> 저장위치 : WEB브라우저 메모리 또는 파일

3. 동적페이지
4. jsp란
 - JSP(Java Server Pages) 란 ?
    -> JSP란 JavaServerPages의 약자이며, HTML코드에 Java코드를 넣어 동적 웹페이지를 생성하는 웹어플리케이션 도구이다.
    -> JSP가 실행되면 자바 Servlet으로 변환되며, 웹 어플리케이션 서버에서 동작되면서 필요한 기능을 수행하고 그렇게 생성된 데이터를 웹페이지와 함께 클라이언트로 응답한다.
    -> HTML + Java : HTML을 중심으로 JAVA와 연동하여 사용하는 웹 언어이다.

5. 스크립트 태그
 - HTML 코드에 자바 코드를 넣어 프로그램이 수행할 기능을 구현할 수 있다.
 5-1. 선언문(declaration) : <%! %>
    -> 자바 변수나 메서드를 정의하는데 사용되는 태그
 5-2. 스크립틀릿(scriptlet) : <% %>
    -> 자바 변수 선언 및 자바 로직 코드를 작성하는데 사용되는 태그
 5-3. 표현문(expression) : <%= %>
    -> 변수, 계산식, 메서드, 호출 결과를 나타내는 태그
 5-4. 지시자 : <%@ %>
    -> 페이지 속성 지정
 5-5. 주석 : <%-- --%>
    -> 주석처리

6. 내장객체
 6-1. jsp내장객체
  - jsp페이지 내에서 제공되는 특수한 클래스 형의 객체
  - 내장 객체는 선언과 할당 없이 사용할 수 있다
    -> jsp 페이지 java클래스 형태로 변환된다

 6-2.jsp 내장객체 종류
  - HttpServletRequest : request
  - HttpServletResponse : response
  - jspWriter : out
  - HttpSession : session
  - ServletContext : application
  - Throwable : exception

7. 디렉티브 태그
 - 현재 jsp 페이지의 특정 영역에 외부 파일의 내용을 포함시키는 태그이다.
 - 보통 header와 footer는 대부분의 페이지에 동일한 내용으로 작성되기 때문에, 유지보수 및 편의를 위하여 외부 파일로 만든 후 include하여 사용한다.
 - 이런것들을 모듈화라고 한다.
 - <%@ include file="파일명" %>




